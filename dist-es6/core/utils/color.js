// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Parse array or string color
function parseColor(color, target) {
  var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

  if (Array.isArray(color) || ArrayBuffer.isView(color)) {
    if (!target && color.length === 4) {
      return color;
    }

    target = target || [];
    target[index + 0] = color[0];
    target[index + 1] = color[1];
    target[index + 2] = color[2];
    target[index + 3] = color.length === 4 ? color[4] : 255;
    return target;
  }

  if (typeof color === 'string') {
    target = target || [];
    parseHexColor(color, target, index);
    return target;
  }

  return [0, 0, 0, 255];
}

// Parse a hex color
function parseHexColor(color, target, index) {
  if (color.length === 7) {
    var value = parseInt(color.substring(1), 16);
    target[index + 0] = Math.floor(value / 65536);
    target[index + 1] = Math.floor(value / 256 % 256);
    target[index + 2] = value % 256;
    target[index + 3] = 255;
  } else if (color.length === 9) {
    var _value = parseInt(color.substring(1), 16);
    target[index + 0] = Math.floor(_value / 16777216);
    target[index + 1] = Math.floor(_value / 65536 % 256);
    target[index + 2] = Math.floor(_value / 256 % 256);
    target[index + 3] = _value % 256;
  }
  return index + 4;
}

function setOpacity(color) {
  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 127;

  return [color[0], color[1], color[2], opacity];
}

function applyOpacity(color) {
  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 127;

  return [color[0], color[1], color[2], opacity];
}

// Named exports have a small perf hit in webpack, normally OK
// but for utils that will be called in tight inner loops, export as object
export default { parseColor: parseColor, setOpacity: setOpacity, applyOpacity: applyOpacity };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb3JlL3V0aWxzL2NvbG9yLmpzIl0sIm5hbWVzIjpbInBhcnNlQ29sb3IiLCJjb2xvciIsInRhcmdldCIsImluZGV4IiwiQXJyYXkiLCJpc0FycmF5IiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJsZW5ndGgiLCJwYXJzZUhleENvbG9yIiwidmFsdWUiLCJwYXJzZUludCIsInN1YnN0cmluZyIsIk1hdGgiLCJmbG9vciIsInNldE9wYWNpdHkiLCJvcGFjaXR5IiwiYXBwbHlPcGFjaXR5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFNBQVNBLFVBQVQsQ0FBb0JDLEtBQXBCLEVBQTJCQyxNQUEzQixFQUE4QztBQUFBLE1BQVhDLEtBQVcsdUVBQUgsQ0FBRzs7QUFDNUMsTUFBSUMsTUFBTUMsT0FBTixDQUFjSixLQUFkLEtBQXdCSyxZQUFZQyxNQUFaLENBQW1CTixLQUFuQixDQUE1QixFQUF1RDtBQUNyRCxRQUFJLENBQUNDLE1BQUQsSUFBV0QsTUFBTU8sTUFBTixLQUFpQixDQUFoQyxFQUFtQztBQUNqQyxhQUFPUCxLQUFQO0FBQ0Q7O0FBRURDLGFBQVNBLFVBQVUsRUFBbkI7QUFDQUEsV0FBT0MsUUFBUSxDQUFmLElBQW9CRixNQUFNLENBQU4sQ0FBcEI7QUFDQUMsV0FBT0MsUUFBUSxDQUFmLElBQW9CRixNQUFNLENBQU4sQ0FBcEI7QUFDQUMsV0FBT0MsUUFBUSxDQUFmLElBQW9CRixNQUFNLENBQU4sQ0FBcEI7QUFDQUMsV0FBT0MsUUFBUSxDQUFmLElBQW9CRixNQUFNTyxNQUFOLEtBQWlCLENBQWpCLEdBQXFCUCxNQUFNLENBQU4sQ0FBckIsR0FBZ0MsR0FBcEQ7QUFDQSxXQUFPQyxNQUFQO0FBQ0Q7O0FBRUQsTUFBSSxPQUFPRCxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzdCQyxhQUFTQSxVQUFVLEVBQW5CO0FBQ0FPLGtCQUFjUixLQUFkLEVBQXFCQyxNQUFyQixFQUE2QkMsS0FBN0I7QUFDQSxXQUFPRCxNQUFQO0FBQ0Q7O0FBRUQsU0FBTyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLEdBQVYsQ0FBUDtBQUNEOztBQUVEO0FBQ0EsU0FBU08sYUFBVCxDQUF1QlIsS0FBdkIsRUFBOEJDLE1BQTlCLEVBQXNDQyxLQUF0QyxFQUE2QztBQUMzQyxNQUFJRixNQUFNTyxNQUFOLEtBQWlCLENBQXJCLEVBQXdCO0FBQ3RCLFFBQU1FLFFBQVFDLFNBQVNWLE1BQU1XLFNBQU4sQ0FBZ0IsQ0FBaEIsQ0FBVCxFQUE2QixFQUE3QixDQUFkO0FBQ0FWLFdBQU9DLFFBQVEsQ0FBZixJQUFvQlUsS0FBS0MsS0FBTCxDQUFXSixRQUFRLEtBQW5CLENBQXBCO0FBQ0FSLFdBQU9DLFFBQVEsQ0FBZixJQUFvQlUsS0FBS0MsS0FBTCxDQUFZSixRQUFRLEdBQVQsR0FBZ0IsR0FBM0IsQ0FBcEI7QUFDQVIsV0FBT0MsUUFBUSxDQUFmLElBQW9CTyxRQUFRLEdBQTVCO0FBQ0FSLFdBQU9DLFFBQVEsQ0FBZixJQUFvQixHQUFwQjtBQUNELEdBTkQsTUFNTyxJQUFJRixNQUFNTyxNQUFOLEtBQWlCLENBQXJCLEVBQXdCO0FBQzdCLFFBQU1FLFNBQVFDLFNBQVNWLE1BQU1XLFNBQU4sQ0FBZ0IsQ0FBaEIsQ0FBVCxFQUE2QixFQUE3QixDQUFkO0FBQ0FWLFdBQU9DLFFBQVEsQ0FBZixJQUFvQlUsS0FBS0MsS0FBTCxDQUFXSixTQUFRLFFBQW5CLENBQXBCO0FBQ0FSLFdBQU9DLFFBQVEsQ0FBZixJQUFvQlUsS0FBS0MsS0FBTCxDQUFZSixTQUFRLEtBQVQsR0FBa0IsR0FBN0IsQ0FBcEI7QUFDQVIsV0FBT0MsUUFBUSxDQUFmLElBQW9CVSxLQUFLQyxLQUFMLENBQVdKLFNBQVEsR0FBUixHQUFjLEdBQXpCLENBQXBCO0FBQ0FSLFdBQU9DLFFBQVEsQ0FBZixJQUFvQk8sU0FBUSxHQUE1QjtBQUNEO0FBQ0QsU0FBT1AsUUFBUSxDQUFmO0FBQ0Q7O0FBRUQsU0FBU1ksVUFBVCxDQUFvQmQsS0FBcEIsRUFBMEM7QUFBQSxNQUFmZSxPQUFlLHVFQUFMLEdBQUs7O0FBQ3hDLFNBQU8sQ0FBQ2YsTUFBTSxDQUFOLENBQUQsRUFBV0EsTUFBTSxDQUFOLENBQVgsRUFBcUJBLE1BQU0sQ0FBTixDQUFyQixFQUErQmUsT0FBL0IsQ0FBUDtBQUNEOztBQUVELFNBQVNDLFlBQVQsQ0FBc0JoQixLQUF0QixFQUE0QztBQUFBLE1BQWZlLE9BQWUsdUVBQUwsR0FBSzs7QUFDMUMsU0FBTyxDQUFDZixNQUFNLENBQU4sQ0FBRCxFQUFXQSxNQUFNLENBQU4sQ0FBWCxFQUFxQkEsTUFBTSxDQUFOLENBQXJCLEVBQStCZSxPQUEvQixDQUFQO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBLGVBQWUsRUFBQ2hCLHNCQUFELEVBQWFlLHNCQUFiLEVBQXlCRSwwQkFBekIsRUFBZiIsImZpbGUiOiJjb2xvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMTcgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG4vLyBQYXJzZSBhcnJheSBvciBzdHJpbmcgY29sb3JcbmZ1bmN0aW9uIHBhcnNlQ29sb3IoY29sb3IsIHRhcmdldCwgaW5kZXggPSAwKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGNvbG9yKSB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcoY29sb3IpKSB7XG4gICAgaWYgKCF0YXJnZXQgJiYgY29sb3IubGVuZ3RoID09PSA0KSB7XG4gICAgICByZXR1cm4gY29sb3I7XG4gICAgfVxuXG4gICAgdGFyZ2V0ID0gdGFyZ2V0IHx8IFtdO1xuICAgIHRhcmdldFtpbmRleCArIDBdID0gY29sb3JbMF07XG4gICAgdGFyZ2V0W2luZGV4ICsgMV0gPSBjb2xvclsxXTtcbiAgICB0YXJnZXRbaW5kZXggKyAyXSA9IGNvbG9yWzJdO1xuICAgIHRhcmdldFtpbmRleCArIDNdID0gY29sb3IubGVuZ3RoID09PSA0ID8gY29sb3JbNF0gOiAyNTU7XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgY29sb3IgPT09ICdzdHJpbmcnKSB7XG4gICAgdGFyZ2V0ID0gdGFyZ2V0IHx8IFtdO1xuICAgIHBhcnNlSGV4Q29sb3IoY29sb3IsIHRhcmdldCwgaW5kZXgpO1xuICAgIHJldHVybiB0YXJnZXQ7XG4gIH1cblxuICByZXR1cm4gWzAsIDAsIDAsIDI1NV07XG59XG5cbi8vIFBhcnNlIGEgaGV4IGNvbG9yXG5mdW5jdGlvbiBwYXJzZUhleENvbG9yKGNvbG9yLCB0YXJnZXQsIGluZGV4KSB7XG4gIGlmIChjb2xvci5sZW5ndGggPT09IDcpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHBhcnNlSW50KGNvbG9yLnN1YnN0cmluZygxKSwgMTYpO1xuICAgIHRhcmdldFtpbmRleCArIDBdID0gTWF0aC5mbG9vcih2YWx1ZSAvIDY1NTM2KTtcbiAgICB0YXJnZXRbaW5kZXggKyAxXSA9IE1hdGguZmxvb3IoKHZhbHVlIC8gMjU2KSAlIDI1Nik7XG4gICAgdGFyZ2V0W2luZGV4ICsgMl0gPSB2YWx1ZSAlIDI1NjtcbiAgICB0YXJnZXRbaW5kZXggKyAzXSA9IDI1NTtcbiAgfSBlbHNlIGlmIChjb2xvci5sZW5ndGggPT09IDkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHBhcnNlSW50KGNvbG9yLnN1YnN0cmluZygxKSwgMTYpO1xuICAgIHRhcmdldFtpbmRleCArIDBdID0gTWF0aC5mbG9vcih2YWx1ZSAvIDE2Nzc3MjE2KTtcbiAgICB0YXJnZXRbaW5kZXggKyAxXSA9IE1hdGguZmxvb3IoKHZhbHVlIC8gNjU1MzYpICUgMjU2KTtcbiAgICB0YXJnZXRbaW5kZXggKyAyXSA9IE1hdGguZmxvb3IodmFsdWUgLyAyNTYgJSAyNTYpO1xuICAgIHRhcmdldFtpbmRleCArIDNdID0gdmFsdWUgJSAyNTY7XG4gIH1cbiAgcmV0dXJuIGluZGV4ICsgNDtcbn1cblxuZnVuY3Rpb24gc2V0T3BhY2l0eShjb2xvciwgb3BhY2l0eSA9IDEyNykge1xuICByZXR1cm4gW2NvbG9yWzBdLCBjb2xvclsxXSwgY29sb3JbMl0sIG9wYWNpdHldO1xufVxuXG5mdW5jdGlvbiBhcHBseU9wYWNpdHkoY29sb3IsIG9wYWNpdHkgPSAxMjcpIHtcbiAgcmV0dXJuIFtjb2xvclswXSwgY29sb3JbMV0sIGNvbG9yWzJdLCBvcGFjaXR5XTtcbn1cblxuLy8gTmFtZWQgZXhwb3J0cyBoYXZlIGEgc21hbGwgcGVyZiBoaXQgaW4gd2VicGFjaywgbm9ybWFsbHkgT0tcbi8vIGJ1dCBmb3IgdXRpbHMgdGhhdCB3aWxsIGJlIGNhbGxlZCBpbiB0aWdodCBpbm5lciBsb29wcywgZXhwb3J0IGFzIG9iamVjdFxuZXhwb3J0IGRlZmF1bHQge3BhcnNlQ29sb3IsIHNldE9wYWNpdHksIGFwcGx5T3BhY2l0eX07XG5cbiJdfQ==